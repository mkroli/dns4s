{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"dns4s"},{"location":"/index.html#dns4s","text":"dns4s is an implementation of the DNS protocol in Scala. It consists of the following components:\nComponent Scala 2.10 2.11 2.12 2.13 3 Core Akka IO Extension Netty Codec Cats-Effect/FS2","title":"dns4s"},{"location":"/core.html","text":"","title":"Core"},{"location":"/core.html#core","text":"The core part contains the functionality used for en-/decoding of DNS messages as well as an inner-DSL to con-/destruct DNS messages.\nFor a detailed explanation of the DSL have a look at its documentation.\nFor using it in a client/server application have a look at the Akka IO Extension or the Netty Codec.","title":"Core"},{"location":"/core.html#usage","text":"If youâ€™re using sbt just add the following to your build definition:\nlibraryDependencies ++= Seq(\n  \"com.github.mkroli\" %% \"dns4s-core\" % \"0.21.0-SNAPSHOT\"\n)","title":"Usage"},{"location":"/dsl.html","text":"","title":"DSL"},{"location":"/dsl.html#dsl","text":"Use the following imports for the examples:\nimport com.github.mkroli.dns4s._\nimport com.github.mkroli.dns4s.dsl._\nimport com.github.mkroli.dns4s.section._\nimport com.github.mkroli.dns4s.section.resource._","title":"DSL"},{"location":"/dsl.html#header","text":"","title":"Header"},{"location":"/dsl.html#id","text":"// Creation\nval msg: Message = Query ~ Id(123)\n// msg: Message = Message(\n//   header = HeaderSection(\n//     id = 123,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval id = msg match {\n  case Id(id) => id\n}\n// id: Int = 123","title":"ID"},{"location":"/dsl.html#qr","text":"// Creation\nval query: Message = Query\n// query: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response1: Message = Response\n// response1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response2: Message = Response(query)\n// response2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval qr = query match {\n  case Query(msg)    => \"query\"\n  case Response(msg) => \"response\"\n}\n// qr: String = \"query\"","title":"QR"},{"location":"/dsl.html#opcode","text":"// Creation\nval query1: Message = Query ~ StandardQuery\n// query1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval query2: Message = Query ~ InverseQuery\n// query2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 1,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval query3: Message = Query ~ ServerStatusRequest\n// query3: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 2,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval op = query1 match {\n  case StandardQuery()       => \"standard-query\"\n  case InverseQuery()        => \"inverse-query\"\n  case ServerStatusRequest() => \"server-status-request\"\n}\n// op: String = \"standard-query\"","title":"Opcode"},{"location":"/dsl.html#aa","text":"// Creation\nval response: Message = Response ~ AuthoritativeAnswer\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = true,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval aa = response match {\n  case AuthoritativeAnswer() => true\n  case _ => false\n}\n// aa: Boolean = true","title":"AA"},{"location":"/dsl.html#tc","text":"// Creation\nval response: Message = Response ~ Truncation\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = true,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval tc = response match {\n  case Truncation() => true\n  case _ => false\n}\n// tc: Boolean = true","title":"TC"},{"location":"/dsl.html#rd","text":"// Creation\nval query: Message = Query ~ RecursionDesired\n// query: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval rd = query match {\n  case RecursionDesired() => true\n  case _ => false\n}\n// rd: Boolean = true","title":"RD"},{"location":"/dsl.html#ra","text":"// Creation\nval response: Message = Response ~ RecursionAvailable\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = true,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval ra = response match {\n  case RecursionAvailable() => true\n  case _ => false\n}\n// ra: Boolean = true","title":"RA"},{"location":"/dsl.html#rcode","text":"// Creation\nval response1: Message = Response ~ NoError\n// response1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response2: Message = Response ~ FormatError\n// response2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 1,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response3: Message = Response ~ ServerFailure\n// response3: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 2,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response4: Message = Response ~ NameError\n// response4: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 3,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response5: Message = Response ~ NotImplemented\n// response5: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 4,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval response6: Message = Response ~ Refused\n// response6: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 5,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval rCode = response1 match {\n  case Response(r) ~ NoError()        => \"no-error\"\n  case Response(r) ~ FormatError()    => \"format-error\"\n  case Response(r) ~ ServerFailure()  => \"server-failure\"\n  case Response(r) ~ NameError()      => \"name-error\"\n  case Response(r) ~ NotImplemented() => \"not-implemented\"\n  case Response(r) ~ Refused()        => \"refused\"\n}\n// rCode: String = \"no-error\"","title":"RCODE"},{"location":"/dsl.html#sections","text":"","title":"Sections"},{"location":"/dsl.html#question-section","text":"// Creation\nval query: Message = Query ~ Questions()\n// query: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval questions = query match {\n  case Query(_) ~ Questions(questions) => questions\n}\n// questions: Seq[QuestionSection] = List()","title":"Question section"},{"location":"/dsl.html#qname","text":"// Creation\nval query1: Message = Query ~ Questions(QName(\"example.com\"))\n// query1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval query2: Message = Query ~ Questions(QName(\"example.com\"), QName(\"www.example.com\"))\n// query2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 2,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1),\n//     QuestionSection(qname = \"www.example.com\", qtype = 1, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval names = query2 match {\n  case Query(_) ~ Questions(QName(name1) :: QName(name2) :: Nil) => (name1, name2)\n}\n// names: (String, String) = (\"example.com\", \"www.example.com\")","title":"QNAME"},{"location":"/dsl.html#qtype","text":"// Creation\nval query: Message = Query ~ Questions(QName(\"example.com\") ~ QType(ResourceRecord.typeTXT))\n// query: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 16, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\nval queryA:        Message = Query ~ Questions(QName(\"example.com\") ~ TypeA)\n// queryA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryNS:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeNS)\n// queryNS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 2, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMD:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMD)\n// queryMD: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 3, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMF:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMF)\n// queryMF: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 4, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryCNAME:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeCNAME)\n// queryCNAME: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 5, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval querySOA:      Message = Query ~ Questions(QName(\"example.com\") ~ TypeSOA)\n// querySOA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 6, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMB:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMB)\n// queryMB: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 7, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMG:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMG)\n// queryMG: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 8, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMR:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMR)\n// queryMR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 9, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryNULL:     Message = Query ~ Questions(QName(\"example.com\") ~ TypeNULL)\n// queryNULL: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 10, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryWKS:      Message = Query ~ Questions(QName(\"example.com\") ~ TypeWKS)\n// queryWKS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 11, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryPTR:      Message = Query ~ Questions(QName(\"example.com\") ~ TypePTR)\n// queryPTR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 12, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryHINFO:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeHINFO)\n// queryHINFO: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 13, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMINFO:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeMINFO)\n// queryMINFO: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 14, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMX:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeMX)\n// queryMX: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 15, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryTXT:      Message = Query ~ Questions(QName(\"example.com\") ~ TypeTXT)\n// queryTXT: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 16, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryAAAA:     Message = Query ~ Questions(QName(\"example.com\") ~ TypeAAAA)\n// queryAAAA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 28, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval querySRV:      Message = Query ~ Questions(QName(\"example.com\") ~ TypeSRV)\n// querySRV: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 33, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryNAPTR:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeNAPTR)\n// queryNAPTR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 35, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryOPT:      Message = Query ~ Questions(QName(\"example.com\") ~ TypeOPT)\n// queryOPT: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 41, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryAXFR:     Message = Query ~ Questions(QName(\"example.com\") ~ TypeAXFR)\n// queryAXFR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 252, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMAILB:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeMAILB)\n// queryMAILB: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 253, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryMAILA:    Message = Query ~ Questions(QName(\"example.com\") ~ TypeMAILA)\n// queryMAILA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 254, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryAsterisk: Message = Query ~ Questions(QName(\"example.com\") ~ TypeAsterisk)\n// queryAsterisk: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 255, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval `type` = query match {\n  case Query(q) ~ Questions(QName(name) ~ TypeA()        :: Nil) => \"A\"\n  case Query(q) ~ Questions(QName(name) ~ TypeNS()       :: Nil) => \"NS\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMD()       :: Nil) => \"MD\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMF()       :: Nil) => \"MF\"\n  case Query(q) ~ Questions(QName(name) ~ TypeCNAME()    :: Nil) => \"CNAME\"\n  case Query(q) ~ Questions(QName(name) ~ TypeSOA()      :: Nil) => \"SOA\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMB()       :: Nil) => \"MB\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMG()       :: Nil) => \"MG\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMR()       :: Nil) => \"MR\"\n  case Query(q) ~ Questions(QName(name) ~ TypeNULL()     :: Nil) => \"NULL\"\n  case Query(q) ~ Questions(QName(name) ~ TypeWKS()      :: Nil) => \"WKS\"\n  case Query(q) ~ Questions(QName(name) ~ TypePTR()      :: Nil) => \"PTR\"\n  case Query(q) ~ Questions(QName(name) ~ TypeHINFO()    :: Nil) => \"HINFO\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMINFO()    :: Nil) => \"MINFO\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMX()       :: Nil) => \"MX\"\n  case Query(q) ~ Questions(QName(name) ~ TypeTXT()      :: Nil) => \"TXT\"\n  case Query(q) ~ Questions(QName(name) ~ TypeAAAA()     :: Nil) => \"AAAA\"\n  case Query(q) ~ Questions(QName(name) ~ TypeSRV()      :: Nil) => \"SRV\"\n  case Query(q) ~ Questions(QName(name) ~ TypeNAPTR()    :: Nil) => \"NAPTR\"\n  case Query(q) ~ Questions(QName(name) ~ TypeOPT()      :: Nil) => \"OPT\"\n  case Query(q) ~ Questions(QName(name) ~ TypeAXFR()     :: Nil) => \"AXFR\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMAILB()    :: Nil) => \"MAILB\"\n  case Query(q) ~ Questions(QName(name) ~ TypeMAILA()    :: Nil) => \"MAILA\"\n  case Query(q) ~ Questions(QName(name) ~ TypeAsterisk() :: Nil) => \"Asterisk\"\n\n  case Query(q) ~ Questions(QName(name) ~ QType(t) :: Nil) => t.toString\n}\n// `type`: String = \"TXT\"","title":"QTYPE"},{"location":"/dsl.html#qclass","text":"// Creation\nval query: Message = Query ~ Questions(QName(\"example.com\") ~ QType(ResourceRecord.typeA) ~ QClass(ResourceRecord.classIN))\n// query: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\nval queryIN:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeA ~ ClassIN)\n// queryIN: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryCS:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeA ~ ClassCS)\n// queryCS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 2)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryCH:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeA ~ ClassCH)\n// queryCH: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 3)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryHS:       Message = Query ~ Questions(QName(\"example.com\") ~ TypeA ~ ClassHS)\n// queryHS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 4)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\nval queryAsterisk: Message = Query ~ Questions(QName(\"example.com\") ~ TypeA ~ ClassAsterisk)\n// queryAsterisk: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 1, qclass = 255)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval qclass = query match {\n  case Query(q) ~ Questions(QName(name) ~ QType(t) ~ QClass(c) :: Nil) => c\n\n  case Query(q) ~ Questions(QName(name) ~ TypeA() ~ ClassIN() :: Nil) => ???\n  case Query(q) ~ Questions(QName(name) ~ TypeA() ~ ClassCS() :: Nil) => ???\n  case Query(q) ~ Questions(QName(name) ~ TypeA() ~ ClassCH() :: Nil) => ???\n  case Query(q) ~ Questions(QName(name) ~ TypeA() ~ ClassHS() :: Nil) => ???\n  case Query(q) ~ Questions(QName(name) ~ TypeA() ~ ClassAsterisk() :: Nil) => ???\n}\n// qclass: Int = 1","title":"QCLASS"},{"location":"/dsl.html#answer-section","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers()\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval answers = response match {\n  case Response(r) ~ Answers(answers) => answers\n}\n// answers: Seq[ResourceRecord] = List()","title":"Answer section"},{"location":"/dsl.html#authority-records-section","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Authority()\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval authority = response match {\n  case Response(r) ~ Authority(authority) => authority\n}\n// authority: Seq[ResourceRecord] = List()","title":"Authority records section"},{"location":"/dsl.html#additional-records-section","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Additional()\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval additional = response match {\n  case Response(r) ~ Additional(additional) => additional\n}\n// additional: Seq[ResourceRecord] = List()","title":"Additional records section"},{"location":"/dsl.html#resource-record","text":"","title":"Resource record"},{"location":"/dsl.html#name","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers(RRName(\"example.com\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval name = response match {\n  case Response(r) ~ Answers(RRName(name) :: Nil) => name\n}\n// name: String = \"example.com\"","title":"NAME"},{"location":"/dsl.html#type","text":"// Creation\nval response:         Message = Response ~ Answers(RRName(\"example.com\") ~ RRType(ResourceRecord.typeTXT))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 16,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\nval responseA:        Message = Response ~ Answers(RRName(\"example.com\") ~ TypeA)\n// responseA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 1,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseNS:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeNS)\n// responseNS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 2,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMD:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMD)\n// responseMD: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 3,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMF:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMF)\n// responseMF: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 4,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseCNAME:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeCNAME)\n// responseCNAME: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 5,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseSOA:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeSOA)\n// responseSOA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 6,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMB:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMB)\n// responseMB: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 7,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMG:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMG)\n// responseMG: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 8,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMR:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMR)\n// responseMR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 9,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseNULL:     Message = Response ~ Answers(RRName(\"example.com\") ~ TypeNULL)\n// responseNULL: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseWKS:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeWKS)\n// responseWKS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 11,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responsePTR:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypePTR)\n// responsePTR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 12,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseHINFO:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeHINFO)\n// responseHINFO: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 13,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMINFO:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMINFO)\n// responseMINFO: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 14,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMX:       Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMX)\n// responseMX: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 15,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseTXT:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeTXT)\n// responseTXT: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 16,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseAAAA:     Message = Response ~ Answers(RRName(\"example.com\") ~ TypeAAAA)\n// responseAAAA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 28,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseSRV:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeSRV)\n// responseSRV: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 33,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseNAPTR:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeNAPTR)\n// responseNAPTR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 35,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseOPT:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeOPT)\n// responseOPT: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 41,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseAXFR:     Message = Response ~ Answers(RRName(\"example.com\") ~ TypeAXFR)\n// responseAXFR: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 252,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMAILB:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMAILB)\n// responseMAILB: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 253,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseMAILA:    Message = Response ~ Answers(RRName(\"example.com\") ~ TypeMAILA)\n// responseMAILA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 254,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseCAA:      Message = Response ~ Answers(RRName(\"example.com\") ~ TypeCAA)\n// responseCAA: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 257,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseAsterisk: Message = Response ~ Answers(RRName(\"example.com\") ~ TypeAsterisk)\n// responseAsterisk: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 255,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval rtype = response match {\n  case Response(r) ~ Answers(RRName(name) ~ TypeA()        :: Nil) => \"A\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeNS()       :: Nil) => \"NS\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMD()       :: Nil) => \"MD\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMF()       :: Nil) => \"MF\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeCNAME()    :: Nil) => \"CNAME\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeSOA()      :: Nil) => \"SOA\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMB()       :: Nil) => \"MB\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMG()       :: Nil) => \"MG\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMR()       :: Nil) => \"MR\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeNULL()     :: Nil) => \"NULL\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeWKS()      :: Nil) => \"WKS\"\n  case Response(r) ~ Answers(RRName(name) ~ TypePTR()      :: Nil) => \"PTR\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeHINFO()    :: Nil) => \"HINFO\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMINFO()    :: Nil) => \"MINFO\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMX()       :: Nil) => \"MX\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeTXT()      :: Nil) => \"TXT\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeAAAA()     :: Nil) => \"AAAA\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeSRV()      :: Nil) => \"SRV\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeNAPTR()    :: Nil) => \"NAPTR\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeOPT()      :: Nil) => \"OPT\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeAXFR()     :: Nil) => \"AXFR\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMAILB()    :: Nil) => \"MAILB\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeMAILA()    :: Nil) => \"MAILA\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeCAA()      :: Nil) => \"CAA\"\n  case Response(r) ~ Answers(RRName(name) ~ TypeAsterisk() :: Nil) => \"Asterisk\"\n\n  case Response(r) ~ Answers(RRName(name) ~ RRType(t)      :: Nil) => t.toString\n}\n// rtype: String = \"TXT\"","title":"TYPE"},{"location":"/dsl.html#class","text":"// Creation\nval response:         Message = Response ~ Answers(RRName(\"example.com\") ~ RRClass(ResourceRecord.classIN))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\nval responseIN:       Message = Response ~ Answers(RRName(\"example.com\") ~ ClassIN)\n// responseIN: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseCS:       Message = Response ~ Answers(RRName(\"example.com\") ~ ClassCS)\n// responseCS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 2,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseCH:       Message = Response ~ Answers(RRName(\"example.com\") ~ ClassCH)\n// responseCH: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 3,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseHS:       Message = Response ~ Answers(RRName(\"example.com\") ~ ClassHS)\n// responseHS: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 4,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval responseAsterisk: Message = Response ~ Answers(RRName(\"example.com\") ~ ClassAsterisk)\n// responseAsterisk: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 10,\n//       class = 255,\n//       ttl = 3600L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval `class` = response match {\n  case Response(q) ~ Answers(ClassIN()       :: Nil) => \"IN\"\n  case Response(q) ~ Answers(ClassCS()       :: Nil) => \"CS\"\n  case Response(q) ~ Answers(ClassCH()       :: Nil) => \"CH\"\n  case Response(q) ~ Answers(ClassHS()       :: Nil) => \"HS\"\n  case Response(q) ~ Answers(ClassAsterisk() :: Nil) => \"Asterisk\"\n\n  case Response(q) ~ Answers(RRClass(c)       :: Nil) => c.toString\n}\n// `class`: String = \"IN\"","title":"CLASS"},{"location":"/dsl.html#ttl","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers(RRName(\"example.com\") ~ RRType(ResourceRecord.typeTXT) ~ RRClass(ResourceRecord.classIN) ~ RRTtl(123))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 16,\n//       class = 1,\n//       ttl = 123L,\n//       rdata = UnknownResource(bytes = List(), type = 10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval ttl = response match {\n  case Response(r) ~ Answers(RRName(name) ~ RRType(t) ~ RRClass(c) ~ RRTtl(ttl) :: Nil) => ttl\n}\n// ttl: Long = 123L","title":"TTL"},{"location":"/dsl.html#resource-records","text":"","title":"Resource records"},{"location":"/dsl.html#arecord","text":"// Creation\nval addr: java.net.Inet4Address = java.net.InetAddress.getByAddress(Array.fill[Byte](4)(0)).asInstanceOf[java.net.Inet4Address]\n// addr: java.net.Inet4Address = /0.0.0.0\nval response1: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers(ARecord(addr))\n// response1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 1,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AResource(address = /0.0.0.0)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval response2: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers(ARecord(Array[Byte](1, 2, 3, 4)))\n// response2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 1,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AResource(address = /1.2.3.4)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval response3: Message = Response ~ Questions(QName(\"example.com\") ~ TypeA) ~ Answers(ARecord(\"1.2.3.4\"))\n// response3: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 1,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AResource(address = /1.2.3.4)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval address = response1 match {\n  case Response(_) ~ Answers(ARecord(r) :: Nil) => r.address\n}\n// address: java.net.Inet4Address = /0.0.0.0","title":"ARecord"},{"location":"/dsl.html#aaaarecord","text":"// Creation\nval addr: java.net.Inet6Address = java.net.InetAddress.getByAddress(Array.fill[Byte](16)(0)).asInstanceOf[java.net.Inet6Address]\n// addr: java.net.Inet6Address = /0:0:0:0:0:0:0:0\nval response1: Message = Response ~ Questions(QName(\"example.com\") ~ TypeAAAA) ~ Answers(AAAARecord(addr))\n// response1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 28, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 28,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AAAAResource(address = /0:0:0:0:0:0:0:0)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval response2: Message = Response ~ Questions(QName(\"example.com\") ~ TypeAAAA) ~ Answers(AAAARecord(Array[Byte](1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)))\n// response2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 28, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 28,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AAAAResource(address = /102:304:506:708:90a:b0c:d0e:f10)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval response3: Message = Response ~ Questions(QName(\"example.com\") ~ TypeAAAA) ~ Answers(AAAARecord(\"0123:4567:89ab:cdef:0123:4567:89ab:cdef\"))\n// response3: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 28, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 28,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = AAAAResource(address = /123:4567:89ab:cdef:123:4567:89ab:cdef)\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval address = response1 match {\n  case Response(_) ~ Answers(AAAARecord(r) :: Nil) => r.address\n}\n// address: java.net.Inet6Address = /0:0:0:0:0:0:0:0","title":"AAAARecord"},{"location":"/dsl.html#cnamerecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"www.example.com\") ~ TypeCNAME) ~ Answers(CNameRecord(\"example.com\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"www.example.com\", qtype = 5, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 5,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = CNameResource(cname = \"example.com\")\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval cname = response match {\n  case Response(_) ~ Answers(CNameRecord(r) :: Nil) => r.cname\n}\n// cname: String = \"example.com\"","title":"CNameRecord"},{"location":"/dsl.html#mxrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeMX) ~ Answers(MXRecord(1, \"example.com\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 15, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 15,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = MXResource(preference = 1, exchange = \"example.com\")\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval (preference, exchange) = response match {\n  case Response(_) ~ Answers(MXRecord(r) :: Nil) => (r.preference, r.exchange)\n}\n// preference: Int = 1\n// exchange: String = \"example.com\"","title":"MXRecord"},{"location":"/dsl.html#naptrrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeNAPTR) ~ Answers(NAPTRRecord(1, 1, \"A\", \"\", \"!^.*$!example.com!\", \"\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 35, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 35,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = NAPTRResource(\n//         order = 1,\n//         preference = 1,\n//         flags = \"A\",\n//         services = \"\",\n//         regexp = \"!^.*$!example.com!\",\n//         replacement = \"\"\n//       )\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval (order, preference, flags, services, regexp, replacement) = response match {\n  case Response(_) ~ Answers(NAPTRRecord(r) :: Nil) => (r.order, r.preference, r.flags, r.services, r.regexp, r.replacement)\n}\n// order: Int = 1\n// preference: Int = 1\n// flags: String = \"A\"\n// services: String = \"\"\n// regexp: String = \"!^.*$!example.com!\"\n// replacement: String = \"\"","title":"NAPTRRecord"},{"location":"/dsl.html#optrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeOPT) ~ Additional(OPTRecord(Nil))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 1\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 41, qclass = 1)\n//   ),\n//   answer = List(),\n//   authority = List(),\n//   additional = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 41,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = OPTResource(options = List())\n//     )\n//   )\n// )\n\n// Matching\nval optRecord = response match {\n  case Response(_) ~ Additional(OPTRecord(r) :: Nil) => r\n}\n// optRecord: OPTResource = OPTResource(options = List())","title":"OPTRecord"},{"location":"/dsl.html#clientsubnetoption","text":"// Creation\nval response: Message = Response ~ Additional(OPTRecord(ClientSubnetOption(OPTResource.ClientSubnetOPTOptionData.familyIPv4, 24, 0, java.net.InetAddress.getByName(\"1.2.3.0\")) :: Nil))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 0,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 1\n//   ),\n//   question = List(),\n//   answer = List(),\n//   authority = List(),\n//   additional = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 41,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = OPTResource(\n//         options = List(\n//           OPTOption(\n//             code = 8,\n//             data = ClientSubnetOPTOptionData(\n//               family = 1,\n//               sourcePrefixLength = 24,\n//               scopePrefixLength = 0,\n//               address = /1.2.3.0\n//             )\n//           )\n//         )\n//       )\n//     )\n//   )\n// )\n\n// Matching\nval (family, sourcePrefixLength, scopePrefixLength, address) = response match {\n  case Response(_) ~ Additional(OPTRecord(OPTResource(ClientSubnetOption(OPTResource.ClientSubnetOPTOptionData(family, sourcePrefixLength, scopePrefixLength, address)) :: Nil)) :: Nil) => (family, sourcePrefixLength, scopePrefixLength, address)\n}\n// family: Int = 1\n// sourcePrefixLength: Int = 24\n// scopePrefixLength: Int = 0\n// address: java.net.InetAddress = /1.2.3.0","title":"ClientSubnetOption"},{"location":"/dsl.html#nsrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeNS) ~ Answers(NSRecord(\"example.com\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 2, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 2,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = NSResource(nsdname = \"example.com\")\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval nsdname = response match {\n  case Response(_) ~ Answers(NSRecord(r) :: Nil) => r.nsdname\n}\n// nsdname: String = \"example.com\"","title":"NSRecord"},{"location":"/dsl.html#ptrrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypePTR) ~ Answers(PTRRecord(\"example.com\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 12, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 12,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = PTRResource(ptrdname = \"example.com\")\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval ptrdname = response match {\n  case Response(_) ~ Answers(PTRRecord(r) :: Nil) => r.ptrdname\n}\n// ptrdname: String = \"example.com\"","title":"PTRRecord"},{"location":"/dsl.html#hinforecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeHINFO) ~ Answers(HInfoRecord(\"CPU\", \"Linux\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 13, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 13,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = HInfoResource(cpu = \"CPU\", os = \"Linux\")\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval (cpu, os) = response match {\n  case Response(_) ~ Answers(HInfoRecord(r) :: Nil) => (r.cpu, r.os)\n}\n// cpu: String = \"CPU\"\n// os: String = \"Linux\"","title":"HInfoRecord"},{"location":"/dsl.html#txtrecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeTXT) ~ Answers(TXTRecord(\"Test\", \"test\", \"tesT\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 16, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 16,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = TXTResource(txt = ArraySeq(\"Test\", \"test\", \"tesT\"))\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval txt = response match {\n  case Response(_) ~ Answers(TXTRecord(r) :: Nil) => r.txt\n}\n// txt: Seq[String] = ArraySeq(\"Test\", \"test\", \"tesT\")","title":"TXTRecord"},{"location":"/dsl.html#soarecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeSOA) ~ Answers(SOARecord(\"example.com\", \"admin.example.com\", 2015122401L, 3600L, 1800L, 604800L, 600L))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 6, qclass = 1)),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 6,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = SOAResource(\n//         mname = \"example.com\",\n//         rname = \"admin.example.com\",\n//         serial = 2015122401L,\n//         refresh = 3600L,\n//         retry = 1800L,\n//         expire = 604800L,\n//         minimum = 600L\n//       )\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval (mname, rname, serial, refresh, retry, expire, minimum) = response match {\n  case Response(_) ~ Answers(SOARecord(r) :: Nil) => (r.mname, r.rname, r.serial, r.refresh, r.retry, r.expire, r.minimum)\n}\n// mname: String = \"example.com\"\n// rname: String = \"admin.example.com\"\n// serial: Long = 2015122401L\n// refresh: Long = 3600L\n// retry: Long = 1800L\n// expire: Long = 604800L\n// minimum: Long = 600L","title":"SOARecord"},{"location":"/dsl.html#caarecord","text":"// Creation\nval response: Message = Response ~ Questions(QName(\"example.com\") ~ TypeCAA) ~ Answers(RRName(\"example.com\") ~ CAARecord.Issue(\"cert-authority.org\"))\n// response: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 257, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"example.com\",\n//       type = 257,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = IssueResource(\n//         value = \"cert-authority.org\",\n//         issuerCritical = false\n//       )\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\n\n// Matching\nval value = response match {\n  case Response(_) ~ Answers(CAARecord.Issue(r) :: Nil) => r.value\n}\n// value: String = \"cert-authority.org\"","title":"CAARecord"},{"location":"/dsl.html#misc","text":"","title":"Misc"},{"location":"/dsl.html#dnsclassname","text":"// Matching\nval msg: Message = Response ~ Questions(QName(\"example.com\") ~ TypeTXT) ~ Answers(TXTRecord(\"Test\", \"test\", \"tesT\"))\n// msg: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 16, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 16,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = TXTResource(txt = ArraySeq(\"Test\", \"test\", \"tesT\"))\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval (qclass, aclass) = msg match {\n  case Response(_) ~ Questions(DnsClassName(qclass) :: Nil) ~ Answers(DnsClassName(aclass) :: Nil) => (qclass, aclass)\n}\n// qclass: String = \"IN\"\n// aclass: String = \"IN\"","title":"DnsClassName"},{"location":"/dsl.html#dnstypename","text":"The DnsTypeName object can be used to extract a String representation of a Question or a ResourceRecord.\n// Matching\nval msg: Message = Response ~ Questions(QName(\"example.com\") ~ TypeTXT) ~ Answers(TXTRecord(\"Test\", \"test\", \"tesT\"))\n// msg: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = true,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 1,\n//     nscount = 0,\n//     arcount = 0\n//   ),\n//   question = List(\n//     QuestionSection(qname = \"example.com\", qtype = 16, qclass = 1)\n//   ),\n//   answer = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 16,\n//       class = 1,\n//       ttl = 3600L,\n//       rdata = TXTResource(txt = ArraySeq(\"Test\", \"test\", \"tesT\"))\n//     )\n//   ),\n//   authority = List(),\n//   additional = List()\n// )\nval (qtype, atype) = msg match {\n  case Response(_) ~ Questions(DnsTypeName(qtype) :: Nil) ~ Answers(DnsTypeName(atype) :: Nil) => (qtype, atype)\n}\n// qtype: String = \"TXT\"\n// atype: String = \"TXT\"","title":"DnsTypeName"},{"location":"/dsl.html#edns","text":"// Creation\nval query1: Message = Query ~ Questions(QName(\"example.com\") ~ TypeA) ~ EDNS()\n// query1: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 1\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 41,\n//       class = 4096,\n//       ttl = 0L,\n//       rdata = OPTResource(options = List())\n//     )\n//   )\n// )\nval query2: Message = Query ~ Questions(QName(\"example.com\") ~ TypeA) ~ EDNS(4096)\n// query2: Message = Message(\n//   header = HeaderSection(\n//     id = 0,\n//     qr = false,\n//     opcode = 0,\n//     aa = false,\n//     tc = false,\n//     rd = true,\n//     ra = false,\n//     rcode = 0,\n//     qdcount = 1,\n//     ancount = 0,\n//     nscount = 0,\n//     arcount = 1\n//   ),\n//   question = List(QuestionSection(qname = \"example.com\", qtype = 1, qclass = 1)),\n//   answer = List(),\n//   authority = List(),\n//   additional = List(\n//     ResourceRecord(\n//       name = \"\",\n//       type = 41,\n//       class = 4096,\n//       ttl = 0L,\n//       rdata = OPTResource(options = List())\n//     )\n//   )\n// )\n\n// Matching\nval size = query1 match {\n  case Query(_) ~ Questions(q) ~ EDNS(size) => size\n}\n// size: Int = 4096","title":"EDNS"},{"location":"/akka.html","text":"","title":"Akka IO Extension"},{"location":"/akka.html#akka-io-extension","text":"The akka part contains an akka-io extension.","title":"Akka IO Extension"},{"location":"/akka.html#usage","text":"If youâ€™re using sbt just add the following to your build definition:\nlibraryDependencies ++= Seq(\n  \"com.typesafe.akka\" %% \"akka-actor\" % \"2.4.12\",\n  \"com.github.mkroli\" %% \"dns4s-akka\" % \"0.21.0-SNAPSHOT\"\n)","title":"Usage"},{"location":"/akka.html#imports","text":"Use the following additional imports to get started:\nimport com.github.mkroli.dns4s.dsl._\nimport com.github.mkroli.dns4s.akka._","title":"Imports"},{"location":"/akka.html#server","text":"The following is an excerpt from examples/simple/../DnsServer.scala:\nclass DnsHandlerActor extends Actor {\n  override def receive = {\n    case Query(q) ~ Questions(QName(host) ~ TypeA() :: Nil) =>\n      sender() ! Response(q) ~ Answers(RRName(host) ~ ARecord(\"1.2.3.4\"))\n  }\n}\n\nobject DnsServer extends App {\n  implicit val system = ActorSystem(\"DnsServer\")\n  implicit val timeout = Timeout(5 seconds)\n  IO(Dns) ? Dns.Bind(system.actorOf(Props[DnsHandlerActor]()), 5354)\n}","title":"Server"},{"location":"/akka.html#client","text":"The following is an excerpt from examples/simple-client/../DnsClient.scala:\nobject DnsClient extends App {\n  implicit val system = ActorSystem(\"DnsServer\")\n  implicit val timeout = Timeout(5.seconds)\n  import system.dispatcher\n\n  IO(Dns) ? Dns.DnsPacket(Query ~ Questions(QName(\"google.de\")), new java.net.InetSocketAddress(\"8.8.8.8\", 53)) foreach {\n    case Response(Answers(answers)) =>\n      answers.collect {\n        case ARecord(arecord) => println(arecord.address.getHostAddress)\n      }\n  }\n}","title":"Client"},{"location":"/fs2.html","text":"","title":"Cats Effect/FS2"},{"location":"/fs2.html#cats-effect-fs2","text":"The fs2 part contains functions using FS2 to create Cats-Effects / Resources.","title":"Cats Effect/FS2"},{"location":"/fs2.html#usage","text":"If youâ€™re using sbt just add the following to your build definition:\nlibraryDependencies ++= Seq(\n  \"co.fs2\"            %% \"fs2-core\"  % \"3.2.4\",\n  \"com.github.mkroli\" %% \"dns4s-fs2\" % \"0.21.0-SNAPSHOT\"\n)","title":"Usage"},{"location":"/fs2.html#imports","text":"Use the following additional imports to get started:\nimport cats.effect._\nimport com.comcast.ip4s._\n\nimport com.github.mkroli.dns4s.dsl._\nimport com.github.mkroli.dns4s.fs2.Dns","title":"Imports"},{"location":"/fs2.html#server","text":"The following is an excerpt from examples/simple-fs2/../DnsServer.scala:\nobject DnsServer extends IOApp {\n  override def run(args: List[String]): IO[ExitCode] = {\n    Dns\n      .server[IO](port = Some(port\"5354\")) {\n        case Query(q) ~ Questions(QName(host) ~ TypeA() :: Nil) =>\n          IO.pure(Response(q) ~ Answers(RRName(host) ~ ARecord(\"1.2.3.4\")))\n      }\n      .as(ExitCode.Success)\n  }\n}","title":"Server"},{"location":"/fs2.html#client","text":"The following is an excerpt from examples/simple-fs2-client/../DnsClient.scala:\nobject DnsClient extends IOApp {\n  override def run(args: List[String]): IO[ExitCode] = {\n    Dns\n      .client[IO](SocketAddress(ip\"8.8.8.8\", port\"53\"))\n      .use { dns =>\n        for {\n          address <- dns.queryFor(Query ~ Questions(QName(\"google.com\"))) {\n            case Response(Answers(answers)) => IO.fromOption {\n              answers.collectFirst {\n                case ARecord(arecord) => arecord.address.getHostAddress\n              }\n            }(new RuntimeException(\"Response doesn't contain A-Record\"))\n          }\n          _ <- IO.println(address)\n        } yield ExitCode.Success\n      }\n  }\n}","title":"Client"},{"location":"/netty.html","text":"","title":"Netty Codec"},{"location":"/netty.html#netty-codec","text":"The netty part contains the MessageToMessageCodec DnsCodec.","title":"Netty Codec"},{"location":"/netty.html#usage","text":"If youâ€™re using sbt just add the following to your build definition:\nlibraryDependencies ++= Seq(\n  \"com.github.mkroli\" %% \"dns4s-netty\" % \"0.21.0-SNAPSHOT\"\n)","title":"Usage"},{"location":"/netty.html#imports","text":"Use the following additional imports to get started:\nimport com.github.mkroli.dns4s.dsl._\nimport com.github.mkroli.dns4s.netty._\n\nimport io.netty.util.concurrent.Future","title":"Imports"},{"location":"/netty.html#server","text":"The following is an excerpt from examples/simple-netty/../DnsServer.scala:\nclass DnsServerHandler extends SimpleChannelInboundHandler[DnsPacket] {\n  def channelRead0(ctx: ChannelHandlerContext, packet: DnsPacket): Unit = {\n    Some(packet.content).collect {\n      case Query(q) ~ Questions(QName(host) ~ TypeA() :: Nil) =>\n        Response(q) ~ Answers(RRName(host) ~ ARecord(\"1.2.3.4\"))\n    }.foreach { msg =>\n      ctx.channel.writeAndFlush(DnsPacket(msg, packet.sender))\n    }\n  }\n}\n\nobject DnsServer extends App {\n  new Bootstrap()\n    .group(new NioEventLoopGroup)\n    .channel(classOf[NioDatagramChannel])\n    .handler(new ChannelInitializer[DatagramChannel] {\n      override def initChannel(ch: DatagramChannel): Unit = {\n        ch.pipeline.addLast(new DnsCodec, new DnsServerHandler)\n      }\n    })\n    .bind(5354)\n}","title":"Server"},{"location":"/netty.html#client","text":"The following is an excerpt from examples/simple-netty-client/../DnsClient.scala:\nclass DnsClientHandler(group: NioEventLoopGroup) extends SimpleChannelInboundHandler[DnsPacket] {\n  def channelRead0(ctx: ChannelHandlerContext, packet: DnsPacket): Unit = {\n    packet.content match {\n      case Response(Answers(answers)) =>\n        answers.collect {\n          case ARecord(arecord) => println(arecord.address.getHostAddress)\n        }\n      case _ =>\n    }\n    group.shutdownGracefully()\n  }\n}\n\nval group = new NioEventLoopGroup\nval channel: ChannelFuture = {\n  new Bootstrap()\n    .group(group)\n    .channel(classOf[NioDatagramChannel])\n    .handler(new ChannelInitializer[DatagramChannel] {\n      override def initChannel(ch: DatagramChannel): Unit = {\n        ch.pipeline.addLast(new DnsCodec, new DnsClientHandler(group))\n      }\n    })\n    .bind(0)\n    .addListener(new GenericFutureListener[Future[Void]] {\n      override def operationComplete(f: Future[Void]): Unit = {\n        channel.channel.writeAndFlush(DnsPacket(Query ~ Questions(QName(\"google.de\")), new InetSocketAddress(\"8.8.8.8\", 53)))\n      }\n    })\n}","title":"Client"}]}